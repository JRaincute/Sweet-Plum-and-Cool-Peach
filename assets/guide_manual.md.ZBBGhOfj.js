import{_ as a,o as s,c as i,R as e}from"./chunks/framework.rTMGYeCn.js";const u=JSON.parse('{"title":"手动部署","description":"","frontmatter":{},"headers":[],"relativePath":"guide/manual.md","filePath":"guide/manual.md"}'),t={name:"guide/manual.md"},o=e('<h1 id="手动部署" tabindex="-1">手动部署 <a class="header-anchor" href="#手动部署" aria-label="Permalink to &quot;手动部署&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>运行项目需要预先安装<code>golang(&gt;1.19)</code>,<code>mysql</code>,<code>redis</code>,<code>mongodb</code>,<code>nginx</code>,<code>nodejs</code>， 手动部署仅部署后端，前端部分参考 <a href="/Sweet-Plum-and-Cool-Peach/guide/domain.html#未部署前端">域名配置</a></p></div><h3 id="配置后端文件" tabindex="-1">配置后端文件 <a class="header-anchor" href="#配置后端文件" aria-label="Permalink to &quot;配置后端文件&quot;">​</a></h3><p>将<code>data/config/application.yml</code>文件复制到<code>server/config/</code>中，打开 <code>application.yml</code>文件，根据其中的注释修改配置文件并保存</p><h3 id="启动后端" tabindex="-1">启动后端 <a class="header-anchor" href="#启动后端" aria-label="Permalink to &quot;启动后端&quot;">​</a></h3><p>设置go代理</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span></code></pre></div><p>编译</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 给程序取个名字</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.go</span></span></code></pre></div><p>后台运行</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./给程序取的名字</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">logs/nohup.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span></span></code></pre></div><h3 id="开启端口" tabindex="-1">开启端口 <a class="header-anchor" href="#开启端口" aria-label="Permalink to &quot;开启端口&quot;">​</a></h3><p>如果使用云服务并且使用IP访问的话，需要在防火墙配置打开配置文件<code>port</code>所设置的端口</p>',13),n=[o];function l(h,d,p,c,r,k){return s(),i("div",null,n)}const m=a(t,[["render",l]]);export{u as __pageData,m as default};
